version: "3.8"

services:
  db:
    image: mariadb:latest
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: database
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    networks:
      - mynetwork
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./Customer/sql/script.sql:/docker-entrypoint-initdb.d/ 
    healthcheck:
      test: ["CMD", "mariadb", "-uuser", "-ppassword", "-e", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  customer-api:
    build: ./Customer
    container_name: customer-api
    restart: always
    depends_on:
      - db
    networks:
      - mynetwork
    ports:
      - "8002:8000"
    environment:
      DATABASE_URL: "mysql+pymysql://user:password@mysql-db:3306/database"
    command: >
      sh -c "sleep 10 && uvicorn main:app --host 0.0.0.0 --port 8000"

  order-api:
    build: ./Order
    container_name: order-api
    restart: always
    depends_on:
      - db
    networks:
      - mynetwork
    ports:
      - "8003:8000"
    environment:
      DATABASE_URL: "mysql+pymysql://user:password@mysql-db:3306/database"
    command: >
      sh -c "sleep 10 && uvicorn Order:app --host 0.0.0.0 --port 8000"

  storeinventory-api:
    build: ./storeInventory
    container_name: storeinventory-api
    restart: always
    depends_on:
      - db
    networks:
      - mynetwork
    ports:
      - "8004:8000"
    environment:
      DATABASE_URL: "mysql+pymysql://user:password@mysql-db:3306/database"
    command: >
      sh -c "sleep 10 && uvicorn StoreInventory:app --host 0.0.0.0 --port 8000"

  webpage:
    build: ./webpage
    container_name: webpage
    restart: always
    depends_on:
      - customer-api
      - order-api
      - storeinventory-api
    networks:
      - mynetwork
    ports:
     - "8080:80"

volumes:
  db_data:

networks:
  mynetwork:
